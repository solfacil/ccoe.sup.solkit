name: Continuous Integration - Python

run-name: 'CI: ${{ github.event.head_commit.modified }}'

on:
  push:

env:
  PYTHON_VERSION: 3.12
  VIRTUALENV: .venv
  REQUIREMENTS_FILE: requirements/development.txt

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: 'Set up Python ${{ env.PYTHON_VERSION }}'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip wheel setuptools virtualenv
      
      - name: 'Create virtual environment [virtualenv: ${{ env.VIRTUALENV }}]'
        run: |
          python -m virtualenv ${{ env.VIRTUALENV }}

      - name: 'Install requirements [pip: ${{ env.REQUIREMENTS_FILE }}]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          pip install -r ${{ env.REQUIREMENTS_FILE }}
      
      - name: 'Install requirements [pip: package self]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          pip install -e ".[all]"
        
      - name: 'Linter [Ruff]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          ruff check --config ruff.toml

      - name: 'Formatter [Ruff]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          ruff format --check --config ruff.toml
      
      - name: 'Security [Bandit]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          bandit --configfile bandit.yaml --recursive .

      - name: 'Typecheck [Pyright]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          pyright --project pyrightconfig.json

      - name: 'Test [Pytest: Unit]'
        run: |
          source ${{ env.VIRTUALENV }}/bin/activate
          pytest tests/unit
      
      # - name: 'Test [Pytest: Integration]'
      #  run: |
      #    source ${{ env.VIRTUALENV }}/bin/activate
      #    pytest tests/integration
